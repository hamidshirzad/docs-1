import{_ as i,r as p,o as c,c as l,a as e,b as n,d as t,w as o,e as s}from"./app-wfQWMRoZ.js";const u={},r=s(`<h1 id="extension-sdk" tabindex="-1"><a class="header-anchor" href="#extension-sdk" aria-hidden="true">#</a> Extension SDK</h1><p>The new OWN3D Extension SDK is a collection of tools and utilities to help you build extensions for the OWN3D platform. It is designed to be a lightweight and easy-to-use package that provides a simple interface to interact with the OWN3D platform.</p><h2 id="sdk-versions-namespaced-and-modular" tabindex="-1"><a class="header-anchor" href="#sdk-versions-namespaced-and-modular" aria-hidden="true">#</a> SDK versions: namespaced and modular</h2><p>OWN3D provides two API versions for extensions:</p><ul><li><strong>Javascript - Namespaced</strong>: This version aims to be a Twitch Extension like experience. It is a single script that provides the bare minimum to get started with the OWN3D Extension platform. Because the namespaced APi does not benefit from ongoing new feature support, most new apps should instead use the modular API.</li><li><strong>Javascript - Modular</strong>: This version is a collection of modules that provide a more flexible and feature-rich experience. It is the recommended version for new apps.</li></ul><h2 id="installation" tabindex="-1"><a class="header-anchor" href="#installation" aria-hidden="true">#</a> Installation</h2><p>If your starting a new project, we recommend using the <strong>modular version</strong> of the SDK. To install the modular SDK, run:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">npm</span> <span class="token function">install</span> @own3d/sdk
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>After installing the SDK, you can import the modules you need in your project. Keep in mind that your code will be organized in a more modular way, and you will have to import the modules you need explicitly.</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> initializeExtension <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@own3d/sdk/extension&#39;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> useAuth <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@own3d/sdk/auth&#39;</span>

<span class="token keyword">const</span> extension <span class="token operator">=</span> <span class="token function">initializeExtension</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token keyword">const</span> <span class="token punctuation">{</span> onAuthorized <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">useAuth</span><span class="token punctuation">(</span>extension<span class="token punctuation">)</span>

<span class="token function">onAuthorized</span><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">user</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>user<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="modules" tabindex="-1"><a class="header-anchor" href="#modules" aria-hidden="true">#</a> Modules</h2><h3 id="auth" tabindex="-1"><a class="header-anchor" href="#auth" aria-hidden="true">#</a> Auth</h3><p>The Auth module provides methods to authenticate the extension with the OWN3D platform. It allows you to get the current authenticated user and listen for changes to the authentication state.</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> initializeExtension <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@own3d/sdk/extension&#39;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> useAuth <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@own3d/sdk/auth&#39;</span>

<span class="token keyword">const</span> extension <span class="token operator">=</span> <span class="token function">initializeExtension</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token keyword">const</span> <span class="token punctuation">{</span> onAuthorized <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">useAuth</span><span class="token punctuation">(</span>extension<span class="token punctuation">)</span>

<span class="token function">onAuthorized</span><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">user</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>user<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="context" tabindex="-1"><a class="header-anchor" href="#context" aria-hidden="true">#</a> Context</h3><p>The Context module provides methods to get the current context of the extension. The context is a set of key-value pairs that describe the current state of the extension.</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> initializeExtension <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@own3d/sdk/extension&#39;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> useContext <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@own3d/sdk/context&#39;</span>

<span class="token keyword">const</span> extension <span class="token operator">=</span> <span class="token function">initializeExtension</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token keyword">const</span> <span class="token punctuation">{</span> onContext <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">useContext</span><span class="token punctuation">(</span>extension<span class="token punctuation">)</span>

<span class="token function">onContext</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">context<span class="token punctuation">,</span> changed</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> changed<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="remote-config" tabindex="-1"><a class="header-anchor" href="#remote-config" aria-hidden="true">#</a> Remote Config</h3>`,18),d=s(`<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> initializeExtension <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@own3d/sdk/extension&#39;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> useRemoteConfig <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@own3d/sdk/remote-config&#39;</span>

<span class="token keyword">const</span> extension <span class="token operator">=</span> <span class="token function">initializeExtension</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token keyword">const</span> <span class="token punctuation">{</span> getSegments<span class="token punctuation">,</span> setSegment <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">useRemoteConfig</span><span class="token punctuation">(</span>extension<span class="token punctuation">)</span>

<span class="token keyword">const</span> segments <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">getSegments</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>segments<span class="token punctuation">)</span>

<span class="token keyword">await</span> <span class="token function">setSegment</span><span class="token punctuation">(</span><span class="token string">&#39;creator&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">&#39;value&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="socket" tabindex="-1"><a class="header-anchor" href="#socket" aria-hidden="true">#</a> Socket</h3>`,2),k=s(`<div class="custom-container tip"><p class="custom-container-title">TIP</p><p>While we technically use our event bus as our transit for our PubSub system, we recommend using the PubSub module for this purpose, as it provides a more straightforward interface.</p></div><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> initializeExtension <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@own3d/sdk/extension&#39;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> useSocket <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@own3d/sdk/socket&#39;</span>

<span class="token keyword">const</span> extension <span class="token operator">=</span> <span class="token function">initializeExtension</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token keyword">const</span> <span class="token punctuation">{</span> on <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">useSocket</span><span class="token punctuation">(</span>extension<span class="token punctuation">)</span>

<span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;notifysub&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="pubsub" tabindex="-1"><a class="header-anchor" href="#pubsub" aria-hidden="true">#</a> PubSub</h3><p>The PubSub module provides methods to publish and subscribe to messages on a PubSub channel. PubSub channels are used to send messages between different parts of the extension, like communicating between the configuration page and the scene builder widget. You can also use PubSub channels to send messages between different extensions.</p><p><strong>Rate Limits</strong>: The PubSub module has a rate limit of 30 messages per minute per combination of client ID and channel ID.</p><div class="custom-container warning"><p class="custom-container-title">WARNING</p><p>Avoid using our internal IPC module for communication between different parts of your extension. Instead, use the PubSub module. IPC is only intended for communication between the extension and the OWN3D platform.</p></div><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> initializeExtension <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@own3d/sdk/extension&#39;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> usePubSub <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@own3d/sdk/pubsub&#39;</span>

<span class="token keyword">const</span> extension <span class="token operator">=</span> <span class="token function">initializeExtension</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token keyword">const</span> <span class="token punctuation">{</span> publish<span class="token punctuation">,</span> subscribe <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">usePubSub</span><span class="token punctuation">(</span>extension<span class="token punctuation">)</span>

<span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token string">&#39;foo&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token keyword">await</span> <span class="token function">publish</span><span class="token punctuation">(</span><span class="token string">&#39;foo&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">bar</span><span class="token operator">:</span> <span class="token string">&#39;baz&#39;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,7);function m(v,h){const a=p("RouterLink");return c(),l("div",null,[r,e("p",null,[n("The Remote Config module provides methods to get and set configuration values without providing a backend service. Make sure to check out our "),t(a,{to:"/docs/extensions/remote-config.html"},{default:o(()=>[n("Remote Config documentation")]),_:1}),n(" for more information.")]),d,e("p",null,[n("The Socket module provides methods to connect to our event bus, which is a real-time messaging system that allows you to receive events from the OWN3D platform. For example, you can listen for events like new subscriptions or donations via our "),t(a,{to:"/docs/notify-sub/event-types.html"},{default:o(()=>[n("NotifySub Event Types")]),_:1}),n(" or custom events. You can also use the Socket module to receive events from the extension itself, like Remote Config changes.")]),k])}const f=i(u,[["render",m],["__file","sdk.html.vue"]]);export{f as default};
