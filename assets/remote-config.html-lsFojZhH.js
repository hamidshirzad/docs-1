import{_ as c,r as p,o as r,c as l,a as n,b as s,d as a,w as t,e as o}from"./app-wfQWMRoZ.js";const u="/assets/rsc-JbT6YHWJ.png",d={},k={id:"remote-config",tabindex:"-1"},h=n("a",{class:"header-anchor",href:"#remote-config","aria-hidden":"true"},"#",-1),g=n("p",null,[n("img",{src:u,alt:"rsc.png"})],-1),m=n("h2",{id:"introduction",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#introduction","aria-hidden":"true"},"#"),s(" Introduction")],-1),v=n("p",null,"OWN3D's Remote Config Service is a very simple key-value store which can be used to store values like strings, numbers, booleans, and objects without the need to create your own backend. In future versions, we will add support for pushing updates to the client when the config changes, allowing you to update your extension without the need to reload it.",-1),b={class:"custom-container warning"},f=n("p",{class:"custom-container-title"},"WARNING",-1),y=n("strong",null,"Do not store sensitive data in the Remote Config!",-1),w=o('<h2 id="segments" tabindex="-1"><a class="header-anchor" href="#segments" aria-hidden="true">#</a> Segments</h2><p>The Remote Config is divided into three segments: <code>global</code>, <code>developer</code>, and <code>broadcaster</code>. Each segment has its own permissions and can be modified by different parties, but all segments can be accessed by all users who interact with the extension.</p><h3 id="permissions-needed-to-modify-segments" tabindex="-1"><a class="header-anchor" href="#permissions-needed-to-modify-segments" aria-hidden="true">#</a> Permissions needed to modify segments</h3><ul><li><code>global</code>: Only the <strong>developer</strong> can change this segment.</li><li><code>developer</code>: Only the <strong>developer</strong> can change this segment.</li><li><code>broadcaster</code>: The <strong>broadcaster</strong> and <strong>developer</strong> can change this segment.</li></ul><h2 id="generate-a-jwt-token" tabindex="-1"><a class="header-anchor" href="#generate-a-jwt-token" aria-hidden="true">#</a> Generate a JWT token</h2>',5),x=o(`<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> token <span class="token operator">=</span> jwt<span class="token punctuation">.</span><span class="token function">sign</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">exp</span><span class="token operator">:</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>Date<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">1000</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token punctuation">(</span><span class="token number">60</span> <span class="token operator">*</span> <span class="token number">60</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token literal-property property">client_id</span><span class="token operator">:</span> <span class="token string">&#39;your_extension_id&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">channel_id</span><span class="token operator">:</span> <span class="token string">&#39;1&#39;</span><span class="token punctuation">,</span> <span class="token comment">// required when writing to the developer or broadcaster segment</span>
    <span class="token literal-property property">role</span><span class="token operator">:</span> <span class="token string">&#39;external&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">scopes</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;*&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token string">&#39;your_jwt_secret&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="read-from-the-remote-config-service" tabindex="-1"><a class="header-anchor" href="#read-from-the-remote-config-service" aria-hidden="true">#</a> Read from the Remote Config Service</h2><h3 id="read-using-the-extension-helper" tabindex="-1"><a class="header-anchor" href="#read-using-the-extension-helper" aria-hidden="true">#</a> Read using the Extension Helper</h3><p>To read from the Remote Config, you can use the following code snippet:</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> initializeExtension <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@own3d/sdk/extension&#39;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> useRemoteConfig <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@own3d/sdk/remote-config&#39;</span>

<span class="token keyword">const</span> extension <span class="token operator">=</span> <span class="token function">initializeExtension</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token keyword">const</span> <span class="token punctuation">{</span> getSegments <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">useRemoteConfig</span><span class="token punctuation">(</span>extension<span class="token punctuation">)</span>

<span class="token keyword">const</span> config <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">getSegments</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>The <code>config</code> object contains the following properties:</p><table><thead><tr><th>Parameter</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td><code>global</code></td><td><code>object</code></td><td>The global segment of the Remote Config.</td></tr><tr><td><code>broadcaster</code></td><td><code>object</code></td><td>The broadcaster segment of the Remote Config.</td></tr><tr><td><code>developer</code></td><td><code>object</code></td><td>The developer segment of the Remote Config.</td></tr></tbody></table><h3 id="read-using-the-remote-config-api" tabindex="-1"><a class="header-anchor" href="#read-using-the-remote-config-api" aria-hidden="true">#</a> Read using the Remote Config API</h3><p>To read from the Remote Config, you can use the following code snippet:</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> response <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">fetch</span><span class="token punctuation">(</span><span class="token string">&#39;https://ext.own3d.pro/v1/remote-configs/segments&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">method</span><span class="token operator">:</span> <span class="token string">&#39;GET&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">headers</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token string-property property">&#39;Authorization&#39;</span><span class="token operator">:</span> <span class="token string">&#39;Bearer &lt;token&gt;&#39;</span><span class="token punctuation">,</span>
        <span class="token string-property property">&#39;Content-Type&#39;</span><span class="token operator">:</span> <span class="token string">&#39;application/json&#39;</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token keyword">const</span> config <span class="token operator">=</span> <span class="token keyword">await</span> response<span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="write-to-the-remote-config-service" tabindex="-1"><a class="header-anchor" href="#write-to-the-remote-config-service" aria-hidden="true">#</a> Write to the Remote Config Service</h2>`,11),T=n("code",null,"global",-1),_=n("code",null,"developer",-1),C=o(`<p>The API only accept objects as values. If you want to store a string, you need to wrap it in an object. Arrays will be stored as objects with numeric keys.</p><p>We highly recommend to only write to specific keys of the Remote Config, instead of overwriting the whole segment. This will help to avoid conflicts with other services writing to the Remote Config.</p><p>To empty a segment, you can send an empty object.</p><h3 id="write-using-the-extension-helper" tabindex="-1"><a class="header-anchor" href="#write-using-the-extension-helper" aria-hidden="true">#</a> Write using the Extension Helper</h3><div class="custom-container warning"><p class="custom-container-title">WARNING</p><p>Inside the Extension, you can only write to the <code>broadcaster</code> segment of the Remote Config. To write to the <code>global</code> or <code>developer</code> segment, you need to use the Remote Config API.</p></div><p>To write to the Remote Config, you can use the following code snippet:</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> initializeExtension <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@own3d/sdk/extension&#39;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> useRemoteConfig <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@own3d/sdk/remote-config&#39;</span>

<span class="token keyword">const</span> extension <span class="token operator">=</span> <span class="token function">initializeExtension</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token keyword">const</span> <span class="token punctuation">{</span> setSegment <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">useRemoteConfig</span><span class="token punctuation">(</span>extension<span class="token punctuation">)</span>

<span class="token keyword">await</span> <span class="token function">setSegment</span><span class="token punctuation">(</span><span class="token string">&#39;broadcaster&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">foo</span><span class="token operator">:</span> <span class="token string">&#39;bar&#39;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="write-using-the-remote-config-api" tabindex="-1"><a class="header-anchor" href="#write-using-the-remote-config-api" aria-hidden="true">#</a> Write using the Remote Config API</h3><p>To write to the Remote Config, you can use the following code snippet:</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> response <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">fetch</span><span class="token punctuation">(</span><span class="token string">&#39;https://ext.own3d.pro/v1/remote-configs/segments&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">method</span><span class="token operator">:</span> <span class="token string">&#39;POST&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">headers</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token string-property property">&#39;Authorization&#39;</span><span class="token operator">:</span> <span class="token string">&#39;Bearer &lt;token&gt;&#39;</span><span class="token punctuation">,</span>
        <span class="token string-property property">&#39;Content-Type&#39;</span><span class="token operator">:</span> <span class="token string">&#39;application/json&#39;</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token literal-property property">body</span><span class="token operator">:</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
        <span class="token literal-property property">broadcaster</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">foo</span><span class="token operator">:</span> <span class="token string">&quot;bar&quot;</span> <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="listen-to-changes-of-the-remote-config-service" tabindex="-1"><a class="header-anchor" href="#listen-to-changes-of-the-remote-config-service" aria-hidden="true">#</a> Listen to changes of the Remote Config Service</h2><p>To listen to Remote Config changes, you can use the following code snippet, but be aware that you will receive config changes from all extensions installed by the content creator:</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> initializeExtension <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@own3d/sdk/extension&#39;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> useSocket <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@own3d/sdk/socket&#39;</span>

<span class="token keyword">const</span> extension <span class="token operator">=</span> <span class="token function">initializeExtension</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token keyword">const</span> <span class="token punctuation">{</span> on <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">useSocket</span><span class="token punctuation">(</span>extension<span class="token punctuation">)</span>

<span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;remote-config&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token comment">// Only handle changes from your extension</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>data<span class="token punctuation">.</span>extension_id <span class="token operator">!==</span> <span class="token string">&#39;your_extension_id&#39;</span><span class="token punctuation">)</span> <span class="token keyword">return</span>

    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;Config changed&#39;</span><span class="token punctuation">,</span> data<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="parameters" tabindex="-1"><a class="header-anchor" href="#parameters" aria-hidden="true">#</a> Parameters</h3><table><thead><tr><th>Parameter</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td><code>segments</code></td><td><code>object</code></td><td>The segments of the Remote Config that have changed.</td></tr><tr><td><code>extension_id</code></td><td><code>string</code></td><td>The extension id of the extension that has changed the Remote Config.</td></tr><tr><td><code>channel_id</code></td><td><code>string</code></td><td>The channel id of the channel where the extension is installed.</td></tr></tbody></table><h2 id="using-the-remote-config-in-twitch-extension" tabindex="-1"><a class="header-anchor" href="#using-the-remote-config-in-twitch-extension" aria-hidden="true">#</a> Using the Remote Config in Twitch Extension</h2><div class="custom-container warning"><p class="custom-container-title">WARNING</p><p>This feature is only available for selected partnered developers.</p></div><h3 id="write-using-the-remote-config-api-as-twitch-extension" tabindex="-1"><a class="header-anchor" href="#write-using-the-remote-config-api-as-twitch-extension" aria-hidden="true">#</a> Write using the Remote Config API (as Twitch Extension)</h3><p><strong>Prerequisite</strong>: To be able to write to the Remote Config as a Twitch Extension, you need to have your Twitch Extension connected with your OWN3D Extension. Furthermore, you MUST use the <strong>Extension Configuration Service</strong> Capability.</p><p>Twitch Extensions, using the Remote Config API requires different headers. To write to the Remote Config as a Twitch Extension, you need to use the <code>X-Twitch-Segment-Version</code> header which must be set to the <strong>Developer Writable Channel Segment Version</strong> of the extension.</p><p>Furthermore, you need to use the <code>Authorization</code> header with the value <code>Twitch &lt;token&gt;</code>. The token is the Twitch JWT token which is provided by the Twitch Extension Helper.</p><p>Lastly, you need to use the <code>Client-Id</code> header, which must be set to the <strong>Client ID</strong> of the OWN3D extension.</p><p>To write to the Remote Config as a Twitch Extension, you can use the following code snippet:</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> response <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">fetch</span><span class="token punctuation">(</span><span class="token string">&#39;https://ext.own3d.pro/v1/remote-configs/segments&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">method</span><span class="token operator">:</span> <span class="token string">&#39;POST&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">headers</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token string-property property">&#39;X-Twitch-Segment-Version&#39;</span><span class="token operator">:</span> <span class="token string">&#39;1&#39;</span><span class="token punctuation">,</span>
        <span class="token string-property property">&#39;Client-Id&#39;</span><span class="token operator">:</span> <span class="token string">&#39;1&#39;</span><span class="token punctuation">,</span>
        <span class="token string-property property">&#39;Authorization&#39;</span><span class="token operator">:</span> <span class="token string">&#39;Twitch &lt;token&gt;&#39;</span><span class="token punctuation">,</span>
        <span class="token string-property property">&#39;Content-Type&#39;</span><span class="token operator">:</span> <span class="token string">&#39;application/json&#39;</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token literal-property property">body</span><span class="token operator">:</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
        <span class="token literal-property property">broadcaster</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">foo</span><span class="token operator">:</span> <span class="token string">&quot;bar&quot;</span> <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="get-remote-config-changes-via-twitch-pubsub" tabindex="-1"><a class="header-anchor" href="#get-remote-config-changes-via-twitch-pubsub" aria-hidden="true">#</a> Get Remote Config changes via Twitch PubSub</h3><p>When using PubSub, we will send a message to the extension when the Remote Config changes. The message will have the following format:</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;event&quot;</span><span class="token operator">:</span> <span class="token string">&quot;remote-config-updated&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;data&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;links&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token property">&quot;self&quot;</span><span class="token operator">:</span> <span class="token string">&quot;https://cdn.example.com/remote-configs/...&quot;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>A sample code snippet to handle this message is as follows:</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code>Twitch<span class="token punctuation">.</span>ext<span class="token punctuation">.</span><span class="token function">listen</span><span class="token punctuation">(</span><span class="token string">&#39;broadcast&#39;</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span>_<span class="token punctuation">,</span> __<span class="token punctuation">,</span> message<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> payload <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>message <span class="token keyword">as</span> <span class="token builtin">string</span><span class="token punctuation">)</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>payload<span class="token punctuation">.</span>event <span class="token operator">===</span> <span class="token string">&#39;remote-config-updated&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> <span class="token punctuation">{</span>data<span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">await</span> axios<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>payload<span class="token punctuation">.</span>data<span class="token punctuation">.</span>links<span class="token punctuation">.</span>self<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// handle config changes</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="get-remote-config-changes-via-twitch-configuration" tabindex="-1"><a class="header-anchor" href="#get-remote-config-changes-via-twitch-configuration" aria-hidden="true">#</a> Get Remote Config changes via Twitch Configuration</h3><p>When using the Twitch Configuration Service, we will store the remote config in the developer configuration. The developer configuration will have the following format:</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;links&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;self&quot;</span><span class="token operator">:</span> <span class="token string">&quot;https://cdn.example.com/remote-configs/...&quot;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>A sample code snippet to handle this message is as follows:</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code>Twitch<span class="token punctuation">.</span>ext<span class="token punctuation">.</span>configuration<span class="token punctuation">.</span><span class="token function">onChanged</span><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>Twitch<span class="token punctuation">.</span>ext<span class="token punctuation">.</span>configuration<span class="token punctuation">.</span>developer<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">let</span> payload <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>Twitch<span class="token punctuation">.</span>ext<span class="token punctuation">.</span>configuration<span class="token punctuation">.</span>developer<span class="token punctuation">.</span>content<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">const</span> <span class="token punctuation">{</span>data<span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">await</span> axios<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>payload<span class="token punctuation">.</span>links<span class="token punctuation">.</span>self<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// handle config</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,34);function R(j,S){const i=p("Badge"),e=p("RouterLink");return r(),l("div",null,[n("h1",k,[h,s(" Remote Config "),a(i,{text:"public beta",type:"warning"})]),g,m,v,n("div",b,[f,n("p",null,[y,s(" The Remote Config is not encrypted and can be accessed by anyone who interacts with the extension. If you need to store sensitive data, we recommend using the "),a(e,{to:"/docs/extensions/kv.html"},{default:t(()=>[s("Key-Value Store")]),_:1}),s(".")])]),w,n("p",null,[s("To write to the Remote Config, you can either use the "),a(e,{to:"/docs/extensions/sdk.html"},{default:t(()=>[s("Extension SDK")]),_:1}),s(" or generate a JWT token manually. To generate a JWT token manually, you can use the following code snippet:")]),x,n("p",null,[s("To write to the Remote Config, you can either use the "),a(e,{to:"/docs/extensions/extension-helper.html"},{default:t(()=>[s("Extension Helper")]),_:1}),s(" or use the Remote Config API. However, writing to the "),T,s(" or "),_,s(" segment is only possible using the Remote Config API.")]),C])}const E=c(d,[["render",R],["__file","remote-config.html.vue"]]);export{E as default};
