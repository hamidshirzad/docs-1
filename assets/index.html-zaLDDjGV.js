import{_ as c,r as o,o as u,c as d,a as s,b as a,d as n,w as i,f as r,e}from"./app-wfQWMRoZ.js";const h="/assets/merging-template-settings-g2o159f4.png",k={},m=e('<h1 id="getting-started" tabindex="-1"><a class="header-anchor" href="#getting-started" aria-hidden="true">#</a> Getting Started</h1><h2 id="introduction" tabindex="-1"><a class="header-anchor" href="#introduction" aria-hidden="true">#</a> Introduction</h2><p>Alerts are an essential part of engaging with your viewers while streaming. They notify you and your viewers when someone follows you, subscribes to you, donates, and more. OWN3D Pro offers customizable alert sets that allow you to personalize your alerts with images, sounds, fonts, and animations. This guide will help you understand the terminology and provide examples to get you started with setting up alerts.</p><h2 id="terminology" tabindex="-1"><a class="header-anchor" href="#terminology" aria-hidden="true">#</a> Terminology</h2><p>Before diving into the alert configuration, let&#39;s familiarize ourselves with some key terms:</p><h3 id="alert-set" tabindex="-1"><a class="header-anchor" href="#alert-set" aria-hidden="true">#</a> Alert Set</h3><p>An alert set is a collection of different alerts displayed together within a single browser source in broadcasting software like OBS Studio. It helps you organize your alerts with different themes or branding.</p><h3 id="alert-set-configuration" tabindex="-1"><a class="header-anchor" href="#alert-set-configuration" aria-hidden="true">#</a> Alert Set Configuration</h3><p>An alert set configuration defines the settings for how an alert is displayed. It consists of a <code>default</code> template with global settings, a <code>defaults</code> template with type-based settings, and finally the list of <code>variations</code> with specific overrides.</p><h3 id="alert-type" tabindex="-1"><a class="header-anchor" href="#alert-type" aria-hidden="true">#</a> Alert Type</h3><p>An alert type refers to the specific category or purpose of an alert. It defines the action or event that triggers the alert. Examples of alert types include <code>follow</code>, <code>subscribe</code>, <code>donation</code>, <code>cheer</code>, <code>raid</code>, and <code>shoutout</code>. Each alert type can have its own variations and conditions to determine how the alert should be displayed. Alert types are associated with specific platforms such as Twitch, YouTube, TikTok, and Kick.</p><h3 id="alert-variation" tabindex="-1"><a class="header-anchor" href="#alert-variation" aria-hidden="true">#</a> Alert Variation</h3><p>An alert variation is a specific configuration that defines how an alert should appear for a particular scenario. Each variation has its own set of <code>conditions</code> and <code>overrides</code>.</p><h3 id="alert-variation-conditions" tabindex="-1"><a class="header-anchor" href="#alert-variation-conditions" aria-hidden="true">#</a> Alert Variation Conditions</h3><p>Conditions are used to determine which variation should be used for a given alert. They are defined using logical operators and compare variables to specific values.</p><h3 id="message-template-parameters" tabindex="-1"><a class="header-anchor" href="#message-template-parameters" aria-hidden="true">#</a> Message Template Parameters</h3><p>::: v-pre Message templates allow you to customize the text displayed in alerts. Parameters are placeholders in the template that get replaced with actual values during rendering. For example, <code>{{ name }}</code> could be replaced with the name of the person who triggered the alert. :::</p>',17),v={id:"alert-set-configuration-example",tabindex:"-1"},g=s("a",{class:"header-anchor",href:"#alert-set-configuration-example","aria-hidden":"true"},"#",-1),f=e('<div class="custom-container tip"><p class="custom-container-title">TIP</p><p><strong>Understanding Defaults</strong>: By default, the <code>default</code> section can be omitted. However, it&#39;s important to note that both <code>defaults</code> and <code>variations</code> are required components of an alert set configuration. Not providing type-specific <code>defaults</code> for certain alert types will result in the alert being disabled for those types. Similarly, omitting <code>variations</code> for specific types will also disable the alert for those types.</p></div><p>Here&#39;s an illustrative example of an alert set configuration presented in JSON format:</p>',2),b=e(`<div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;id&quot;</span><span class="token operator">:</span> <span class="token number">490885</span><span class="token punctuation">,</span>
  <span class="token property">&quot;version&quot;</span><span class="token operator">:</span> <span class="token number">4</span><span class="token punctuation">,</span>
  <span class="token property">&quot;user_id&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
  <span class="token property">&quot;active&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
  <span class="token property">&quot;default&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;title&quot;</span><span class="token operator">:</span> <span class="token null keyword">null</span><span class="token punctuation">,</span>
    <span class="token property">&quot;subtitle&quot;</span><span class="token operator">:</span> <span class="token null keyword">null</span><span class="token punctuation">,</span>
    <span class="token property">&quot;font_family&quot;</span><span class="token operator">:</span> <span class="token string">&quot;Montserrat&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;font_color&quot;</span><span class="token operator">:</span> <span class="token string">&quot;#ffffff&quot;</span><span class="token punctuation">,</span>
     ...
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token property">&quot;defaults&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token punctuation">{</span>
      <span class="token property">&quot;platform&quot;</span><span class="token operator">:</span> <span class="token string">&quot;twitch&quot;</span><span class="token punctuation">,</span>
      <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;follow&quot;</span><span class="token punctuation">,</span>
      <span class="token property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;Follow&quot;</span><span class="token punctuation">,</span>
      <span class="token property">&quot;enabled&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
      <span class="token property">&quot;default&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token property">&quot;title&quot;</span><span class="token operator">:</span> <span class="token string">&quot;Thanks {{name}} for cheering!ðŸ’ƒðŸ’ƒðŸ’ƒ&quot;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    ...
  <span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token property">&quot;variations&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token punctuation">{</span>
      <span class="token property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;Twitch Cheer&quot;</span><span class="token punctuation">,</span>
      <span class="token property">&quot;conditions&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token property">&quot;and&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
          <span class="token punctuation">{</span><span class="token property">&quot;===&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">{</span><span class="token property">&quot;var&quot;</span><span class="token operator">:</span> <span class="token string">&quot;type&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token string">&quot;cheer&quot;</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
          <span class="token punctuation">{</span><span class="token property">&quot;===&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">{</span><span class="token property">&quot;var&quot;</span><span class="token operator">:</span> <span class="token string">&quot;platform&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token string">&quot;twitch&quot;</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
          <span class="token punctuation">{</span><span class="token property">&quot;===&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">{</span><span class="token property">&quot;var&quot;</span><span class="token operator">:</span> <span class="token string">&quot;enabled&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
          <span class="token punctuation">{</span><span class="token property">&quot;&gt;=&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">{</span><span class="token property">&quot;var&quot;</span><span class="token operator">:</span> <span class="token string">&quot;amount&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">]</span><span class="token punctuation">}</span>
        <span class="token punctuation">]</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token property">&quot;overrides&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token property">&quot;title&quot;</span><span class="token operator">:</span> <span class="token string">&quot;Thanks {{name}} for cheering over 1K bits!ðŸ’ƒðŸ’ƒðŸ’ƒ&quot;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    ...
  <span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),q=e("<p>In this example, we provide an alert set configuration with essential properties such as <code>id</code>, <code>user_id</code>, and <code>active</code> status. The <code>default</code> template defines default settings for alerts, while the <code>defaults</code> list specifies default settings tailored to specific types of alerts. Additionally, the <code>variations</code> list encompasses various alert variations, each defined by their unique conditions and overrides.</p>",1),y={id:"merging-template-settings",tabindex:"-1"},w=s("a",{class:"header-anchor",href:"#merging-template-settings","aria-hidden":"true"},"#",-1),_=e(`<p>When rendering a final alert in AE4, multiple templates come into play. These templates are merged together in a specific order to determine the ultimate alert appearance. The merging process unfolds as follows:</p><ol><li><p><strong>AE4 Global Defaults:</strong> These settings represent the default configurations that apply universally to all alerts within AE4. These global defaults are established within OWN3D&#39;s Alerts Engine&#39;s internal settings.</p></li><li><p><strong>AE4 Alert Set Default:</strong> These configurations are specific to a particular alert set and are customizable through the <code>default</code> property of any alert set. They serve as the default settings for all alerts contained within that set.</p></li><li><p><strong>AE4 Alert Set Defaults for Type:</strong> These settings are tailored to a particular type of alert within an alert set and can be adjusted through the <code>defaults</code> property within the alert set. They provide default configurations for alerts of that specific type. Each type of alert is associated with a combined <code>type</code> and <code>platform</code> key.</p></li><li><p><strong>AE4 Alert Set Variation Overrides:</strong> These settings are the most precise and specific, applying to individual variations of alerts within a set. They can be defined within the <code>overrides</code> property of a variation, enabling fine-grained customization of each alert&#39;s appearance and behavior.</p></li></ol><p>It&#39;s essential to understand that AE4 may find multiple variations that match a single alert. In such cases, the overrides from the matched variations are merged together to create the final alert appearance.</p><p>Here&#39;s a visual representation of the merge process:</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>graph TD
    A[AE4 Global Defaults] --&gt; B[AE4 Alert Set Default]
    B --&gt; C[AE4 Alert Set Defaults for Type]
    C --&gt; D[AE4 Alert Set Variation Overrides]
    D --&gt; E[AE4 Final Alert Template]
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="`+h+'" alt="Alerts Engine 4 (AE4) Merging Process"></p><p>This step-by-step merging ensures that alerts in AE4 have a well-defined and predictable appearance, allowing for customization at various levels to meet specific requirements.</p>',7),x={id:"example-of-existing-types",tabindex:"-1"},A=s("a",{class:"header-anchor",href:"#example-of-existing-types","aria-hidden":"true"},"#",-1),T=e('<div class="custom-container tip"><p class="custom-container-title">TIP</p><p><strong>Technical Terms Recommendations:</strong> We kept the same wording for alerts with the same intend. Follow (Twitch), Subscribe (YouTube) and Follow (Kick) will become <code>-follow</code>. Also for Subscribe (Twitch), Member (YouTube) and Subscribe (Kick) will become <code>-subscribe</code>.</p><p><strong>Migration:</strong> You can migrate your existing alert sets to AE4 by using the <a href="#ae3-migration-api">AE3 Migration API</a>.</p></div><p>Here&#39;s a table listing some existing types of alerts and the platforms they are associated with:</p>',2),E=s("p",null,[s("strong",null,"Note:"),a(" The table above provides examples of existing alert templates, their descriptions, and the platforms they are associated with. These templates can be customized and extended based on your specific needs.")],-1),S={id:"example-of-variations",tabindex:"-1"},I=s("a",{class:"header-anchor",href:"#example-of-variations","aria-hidden":"true"},"#",-1),P=e(`<h2 id="api-reference" tabindex="-1"><a class="header-anchor" href="#api-reference" aria-hidden="true">#</a> API-Reference</h2><h3 id="generate-browser-source-url-s" tabindex="-1"><a class="header-anchor" href="#generate-browser-source-url-s" aria-hidden="true">#</a> Generate Browser Source URL&#39;s</h3><p>You can generate all browser source url&#39;s for your alert sets using the following API endpoint:</p><p><strong>Request:</strong></p><div class="language-http line-numbers-mode" data-ext="http"><pre class="language-http"><code>POST https://api.own3d.pro/v1/browser-source/generate
<span class="token header"><span class="token header-name keyword">Accept</span><span class="token punctuation">:</span> <span class="token header-value">application/json</span></span>
<span class="token header"><span class="token header-name keyword">Content-Type</span><span class="token punctuation">:</span> <span class="token header-value">application/json</span></span>
<span class="token header"><span class="token header-name keyword">Authorization</span><span class="token punctuation">:</span> <span class="token header-value">Bearer &lt;token&gt;</span></span>
<span class="token application-json">
<span class="token comment">// Generates a url for a specific alert browser source:</span>
<span class="token punctuation">{</span><span class="token property">&quot;browser_source_type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;alerts&quot;</span><span class="token punctuation">,</span> <span class="token property">&quot;identifier&quot;</span><span class="token operator">:</span> <span class="token string">&quot;490885&quot;</span><span class="token punctuation">}</span> <span class="token comment">// identifiers must be a string</span>
<span class="token comment">// Generates a url for the default alert browser source:</span>
<span class="token punctuation">{</span><span class="token property">&quot;browser_source_type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;alerts&quot;</span><span class="token punctuation">}</span>
<span class="token comment">// Generates a url for the effect alert browser source:</span>
<span class="token punctuation">{</span><span class="token property">&quot;browser_source_type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;effect-alerts&quot;</span><span class="token punctuation">}</span>
<span class="token comment">// Generates a url for the scene browser source:</span>
<span class="token punctuation">{</span><span class="token property">&quot;browser_source_type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;scenes&quot;</span><span class="token punctuation">,</span> <span class="token property">&quot;identifier&quot;</span><span class="token operator">:</span> <span class="token string">&quot;99dafea3-1675-476c-8582-b5bf3c90cdda&quot;</span><span class="token punctuation">}</span>
<span class="token comment">// Generates a url for the goalbars browser source:</span>
<span class="token punctuation">{</span><span class="token property">&quot;browser_source_type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;goalbars&quot;</span><span class="token punctuation">,</span> <span class="token property">&quot;identifier&quot;</span><span class="token operator">:</span> <span class="token string">&quot;xxxxxxxxx&quot;</span><span class="token punctuation">}</span>
</span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>Response:</strong></p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;id&quot;</span><span class="token operator">:</span> <span class="token number">9958</span><span class="token punctuation">,</span>
  <span class="token property">&quot;identifier&quot;</span><span class="token operator">:</span> <span class="token string">&quot;490885&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;browser_source_type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;alerts&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;access_token&quot;</span><span class="token operator">:</span> <span class="token string">&quot;99dafcbb-adf8-40aa-bd91-4bbca308e665&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;user_id&quot;</span><span class="token operator">:</span> <span class="token string">&quot;1&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;created_at&quot;</span><span class="token operator">:</span> <span class="token string">&quot;2023-08-09T19:02:41.000000Z&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;updated_at&quot;</span><span class="token operator">:</span> <span class="token string">&quot;2023-08-09T19:02:41.000000Z&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;browser_source_url&quot;</span><span class="token operator">:</span> <span class="token string">&quot;https://browser-source.own3d.tv/alerts/99dafcbb-adf8-40aa-bd91-4bbca308e665&quot;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="ae3-migration-api" tabindex="-1"><a class="header-anchor" href="#ae3-migration-api" aria-hidden="true">#</a> AE3 Migration API</h3><div class="custom-container danger"><p class="custom-container-title">DANGER</p><p>This is a one-way migration from AE3 to AE4! Once you migrate your alert sets to AE4, you cannot migrate them back to AE3. Use this API with caution!</p></div><p>The AE3 Migration API allows you to migrate your existing alert sets to AE4. It is a REST API that takes an AE3 alert set as input and migrates it to AE4.</p><div class="language-http line-numbers-mode" data-ext="http"><pre class="language-http"><code>POST https://api.own3d.pro/v1/alert-configs/{id}/migrate
<span class="token header"><span class="token header-name keyword">Accept</span><span class="token punctuation">:</span> <span class="token header-value">application/json</span></span>
<span class="token header"><span class="token header-name keyword">Content-Type</span><span class="token punctuation">:</span> <span class="token header-value">application/json</span></span>
<span class="token header"><span class="token header-name keyword">Authorization</span><span class="token punctuation">:</span> <span class="token header-value">Bearer &lt;token&gt;</span></span>
<span class="token application-json">
<span class="token punctuation">{</span>
 <span class="token property">&quot;engine&quot;</span><span class="token operator">:</span> <span class="token string">&quot;ae4&quot;</span>
<span class="token punctuation">}</span>
</span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,11);function j(B,D){const p=o("RouterLink"),t=o("Badge"),l=o("alert-engine-types");return u(),d("div",null,[m,s("p",null,[a("You can find more about message template parameters in the "),n(p,{to:"/docs/alerts/template-parameters.html"},{default:i(()=>[a("Message Template Parameters")]),_:1}),a(" guide.")]),s("h2",v,[g,a(" Alert Set Configuration Example "),n(t,{text:"AE4",type:"success"})]),f,r(" @formatter:off "),b,r(" @formatter:on "),q,s("h2",y,[w,a(" Merging Template Settings "),n(t,{text:"AE4",type:"success"})]),_,s("h2",x,[A,a(" Example of Existing Types "),n(t,{text:"AE4",type:"success"})]),T,n(l),E,s("h2",S,[I,a(" Example of Variations "),n(t,{text:"AE4",type:"success"})]),s("p",null,[a("You will find a full list of all available variations in the "),n(p,{to:"/docs/alerts/variations.html"},{default:i(()=>[a("Alerts Engine 4 (AE4) Variations")]),_:1}),a(" guide.")]),P])}const z=c(k,[["render",j],["__file","index.html.vue"]]);export{z as default};
